package retrostick;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.Optional;
import javax.swing.JOptionPane;
import retrostick.event.EventBus;
import retrostick.event.JoystickEvent;

/**
 * RetroStick main UI
 * @author jungj
 */
public class RetroStick extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    private int upKeyCode;
    private int downKeyCode;
    private int leftKeyCode;
    private int rightKeyCode;
    private int button1KeyCode;
    private int button2KeyCode;
    private final EventBus eventBus;
    
    /**
     * Creates new form ConfigFrame
     */
    public RetroStick() {
        eventBus = new EventBus();
        initComponents();
    }
    
    private Optional<JoystickEvent> fromKeyCode(int keyCode, boolean pressed) {
        if (keyCode == upKeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.UP, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        if (keyCode == downKeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.DOWN, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        if (keyCode == leftKeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.LEFT, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        if (keyCode == rightKeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.RIGHT, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        if (keyCode == button1KeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.BUTTON1, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        if (keyCode == button2KeyCode) {
            return Optional.of(new JoystickEvent(JoystickEvent.Key.BUTTON2, pressed ? JoystickEvent.State.PRESSED : JoystickEvent.State.RELEASED));
        }
        return Optional.empty();
    }
    
    private void drawEvent(Canvas canvas, JoystickEvent event) {
        final Graphics g = canvas.getGraphics();
        if (g == null) {
            return;
        }
        g.setColor(event.getState().equals(JoystickEvent.State.PRESSED) ? Color.RED : Color.WHITE);
        
        if (event.getKey().equals(JoystickEvent.Key.UP)) {
            g.fillPolygon(new int[]{104, 94, 114}, new int[]{10, 30, 30}, 3);
        }
        if (event.getKey().equals(JoystickEvent.Key.DOWN)) {
            g.fillPolygon(new int[]{104, 94, 114}, new int[]{100, 80, 80}, 3);
        }
        if (event.getKey().equals(JoystickEvent.Key.LEFT)) {
            g.fillPolygon(new int[]{50, 70, 70}, new int[]{54, 44, 64}, 3);
        }
        if (event.getKey().equals(JoystickEvent.Key.RIGHT)) {
            g.fillPolygon(new int[]{157, 137, 137}, new int[]{54, 44, 64}, 3);
        }
        if (event.getKey().equals(JoystickEvent.Key.BUTTON1)) {
            g.fillOval(24, 140, 30, 30);
            g.drawString("BUTTON 1", 10, 190);
        }
        if (event.getKey().equals(JoystickEvent.Key.BUTTON2)) {
            g.fillOval(142, 140, 30, 30);
            g.drawString("BUTTON 2", 128, 190);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upBtn = new javax.swing.JButton();
        downBtn = new javax.swing.JButton();
        leftBtn = new javax.swing.JButton();
        rightBtn = new javax.swing.JButton();
        upTextField = new javax.swing.JTextField();
        downTextField = new javax.swing.JTextField();
        leftTextField = new javax.swing.JTextField();
        rightTextField = new javax.swing.JTextField();
        canvas = new java.awt.Canvas();
        button1Btn = new javax.swing.JButton();
        button2Btn = new javax.swing.JButton();
        button1TextField = new javax.swing.JTextField();
        button2TextField = new javax.swing.JTextField();
        startBtn = new javax.swing.JButton();
        stopBtn = new javax.swing.JButton();
        abutBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RPi Joystick emulator");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        upBtn.setText("UP");
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });

        downBtn.setText("DOWN");
        downBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downBtnActionPerformed(evt);
            }
        });

        leftBtn.setText("LEFT");
        leftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBtnActionPerformed(evt);
            }
        });

        rightBtn.setText("RIGHT");
        rightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightBtnActionPerformed(evt);
            }
        });

        upTextField.setEditable(false);
        upTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                upTextFieldKeyPressed(evt);
            }
        });

        downTextField.setEditable(false);
        downTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                downTextFieldKeyPressed(evt);
            }
        });

        leftTextField.setEditable(false);
        leftTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                leftTextFieldKeyPressed(evt);
            }
        });

        rightTextField.setEditable(false);
        rightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rightTextFieldKeyPressed(evt);
            }
        });

        canvas.setBackground(new java.awt.Color(255, 255, 255));
        canvas.setMinimumSize(new java.awt.Dimension(200, 200));
        canvas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                canvasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                canvasKeyReleased(evt);
            }
        });

        button1Btn.setText("BUTTON 1");
        button1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1BtnActionPerformed(evt);
            }
        });

        button2Btn.setText("BUTTON 2");
        button2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2BtnActionPerformed(evt);
            }
        });

        button1TextField.setEditable(false);
        button1TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                button1TextFieldKeyPressed(evt);
            }
        });

        button2TextField.setEditable(false);
        button2TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                button2TextFieldKeyPressed(evt);
            }
        });

        startBtn.setText("Start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        stopBtn.setText("Stop");
        stopBtn.setEnabled(false);
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        abutBtn.setText("?");
        abutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(button1Btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(rightBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(leftBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(downBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(upBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button2Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(button1TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(rightTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(downTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button2TextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(abutBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stopBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upBtn)
                            .addComponent(upTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(downTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(downBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(leftBtn)
                            .addComponent(leftTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rightBtn)
                            .addComponent(rightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button1Btn)
                            .addComponent(button1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button2Btn)
                            .addComponent(button2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stopBtn)
                        .addComponent(startBtn))
                    .addComponent(abutBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void downBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downBtnActionPerformed
        downTextField.requestFocus();
    }//GEN-LAST:event_downBtnActionPerformed

    private void rightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightBtnActionPerformed
        rightTextField.requestFocus();
    }//GEN-LAST:event_rightBtnActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed
        upTextField.requestFocus();
    }//GEN-LAST:event_upBtnActionPerformed

    private void leftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBtnActionPerformed
        leftTextField.requestFocus();
    }//GEN-LAST:event_leftBtnActionPerformed

    private void upTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upTextFieldKeyPressed
        upKeyCode = evt.getKeyCode();
        upTextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_upTextFieldKeyPressed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        upBtn.setEnabled(false);
        downBtn.setEnabled(false);
        leftBtn.setEnabled(false);
        rightBtn.setEnabled(false);
        button1Btn.setEnabled(false);
        button2Btn.setEnabled(false);
        abutBtn.setEnabled(false);
        stopBtn.setEnabled(true);
        
        upTextField.setEnabled(false);
        downTextField.setEnabled(false);
        leftTextField.setEnabled(false);
        rightTextField.setEnabled(false);
        button1TextField.setEnabled(false);
        button2TextField.setEnabled(false);
        
        startBtn.setEnabled(false);
        canvas.requestFocus();
    }//GEN-LAST:event_startBtnActionPerformed

    private void canvasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_canvasKeyPressed
        fromKeyCode(evt.getKeyCode(), true).ifPresent(joystickEvent -> {
            eventBus.post(joystickEvent);
            drawEvent(canvas, joystickEvent);
        });
    }//GEN-LAST:event_canvasKeyPressed

    private void canvasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_canvasKeyReleased
        fromKeyCode(evt.getKeyCode(), false).ifPresent(joystickEvent -> {
            eventBus.post(joystickEvent);
            drawEvent(canvas, joystickEvent);
        });
    }//GEN-LAST:event_canvasKeyReleased

    private void downTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_downTextFieldKeyPressed
        downKeyCode = evt.getKeyCode();
        downTextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_downTextFieldKeyPressed

    private void leftTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftTextFieldKeyPressed
        leftKeyCode = evt.getKeyCode();
        leftTextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_leftTextFieldKeyPressed

    private void rightTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightTextFieldKeyPressed
        rightKeyCode = evt.getKeyCode();
        rightTextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_rightTextFieldKeyPressed

    private void button1TextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button1TextFieldKeyPressed
        button1KeyCode = evt.getKeyCode();
        button1TextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_button1TextFieldKeyPressed

    private void button2TextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button2TextFieldKeyPressed
        button2KeyCode = evt.getKeyCode();
        button2TextField.setText(KeyEvent.getKeyText(evt.getKeyCode()));
    }//GEN-LAST:event_button2TextFieldKeyPressed

    private void button1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1BtnActionPerformed
        button1TextField.requestFocus();
    }//GEN-LAST:event_button1BtnActionPerformed

    private void button2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2BtnActionPerformed
        button2TextField.requestFocus();
    }//GEN-LAST:event_button2BtnActionPerformed

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        upBtn.setEnabled(true);
        downBtn.setEnabled(true);
        leftBtn.setEnabled(true);
        rightBtn.setEnabled(true);
        button1Btn.setEnabled(true);
        button2Btn.setEnabled(true);
        abutBtn.setEnabled(true);
        stopBtn.setEnabled(false);
        
        upTextField.setEnabled(true);
        downTextField.setEnabled(true);
        leftTextField.setEnabled(true);
        rightTextField.setEnabled(true);
        button1TextField.setEnabled(true);
        button2TextField.setEnabled(true);
        
        upBtn.requestFocus();
        startBtn.setEnabled(true);
    }//GEN-LAST:event_stopBtnActionPerformed

    private void abutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abutBtnActionPerformed
        JOptionPane.showMessageDialog(this, "BlaBla", "About...", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_abutBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        eventBus.shutdown();
        if (this.isDisplayable()) {
            this.dispose();
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try { 
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RetroStick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            RetroStick retroStick = new RetroStick();
            retroStick.setLocationRelativeTo(null);
            retroStick.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abutBtn;
    private javax.swing.JButton button1Btn;
    private javax.swing.JTextField button1TextField;
    private javax.swing.JButton button2Btn;
    private javax.swing.JTextField button2TextField;
    private java.awt.Canvas canvas;
    private javax.swing.JButton downBtn;
    private javax.swing.JTextField downTextField;
    private javax.swing.JButton leftBtn;
    private javax.swing.JTextField leftTextField;
    private javax.swing.JButton rightBtn;
    private javax.swing.JTextField rightTextField;
    private javax.swing.JButton startBtn;
    private javax.swing.JButton stopBtn;
    private javax.swing.JButton upBtn;
    private javax.swing.JTextField upTextField;
    // End of variables declaration//GEN-END:variables
}
